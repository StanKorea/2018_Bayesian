setwd(getwd())
library(rstan)

df <- read.csv("data/EfronMorrisBB.txt", sep="\t")
df <- with(df, data.frame(FirstName, LastName, 
                          Hits, At.Bats, 
                          RemainingAt.Bats,
                          RemainingHits = SeasonHits - Hits));
print(df);

N <- dim(df)[1]
K <- df$At.Bats
y <- df$Hits
K_new <- df$RemainingAt.Bats;
y_new <- df$RemainingHits;

# Model 1: Complete Pooling
M <- 10000;
fit_pool <- stan("stan_programs/baseball_hits_pool.stan", data=c("N", "K", "y", "K_new", "y_new"),
                 iter=(M / 2), chains=4);

ss_pool <- extract(fit_pool);
print(fit_pool, c("phi"), probs=c(0.1, 0.5, 0.9));

# Model 2: No Pooling
fit_no_pool <- stan("stan_programs/baseball_hits_no-pool.stan", data=c("N", "K", "y", "K_new", "y_new"),
                    iter=(M / 2), chains=4);
ss_no_pool <- extract(fit_no_pool);
print(fit_no_pool, c("theta"), probs=c(0.1, 0.5, 0.9));

# Model 3: Partial Pooling
fit_hier <- stan("stan_programs/baseball_hits_hier.stan", data=c("N", "K", "y", "K_new", "y_new"),
                 iter=(M / 2), chains=4,
                 seed=1234);
ss_hier <- extract(fit_hier);

print(fit_hier, c("theta", "kappa", "phi"), probs=c(0.1, 0.5, 0.9));

df_bda3_fig_5_3 <- with(ss_hier,
                        data.frame(x = log(phi / (1 - phi)),
                                   y = log(kappa)));
phi_sim <- ss_hier$phi;
kappa_sim <- ss_hier$kappa;
df_bda3_fig_5_3 <- data.frame(x = log(phi_sim / (1 - phi_sim)),
                              y = log(kappa_sim));
library(ggplot2);
plot_bda3_fig_5_3 <- 
  ggplot(df_bda3_fig_5_3, aes(x=x, y=y)) +
  geom_point(shape=19, alpha=0.15) +
  xlab("logit(phi) = log(alpha / beta)") +
  ylab("log(kappa) = log(alpha + beta)");
plot_bda3_fig_5_3;


inv_logit <- function(u) { 1 / (1 + exp(-u)); }
theta1_sim <- ss_hier$theta[ , 1];
kappa_sim <- ss_hier$kappa;
df_funnel <- data.frame(x = inv_logit(theta1_sim),
                        y = log(kappa_sim));
library(ggplot2);
plot_funnel<- 
  ggplot(df_funnel, aes(x=x, y=y)) +
  geom_point(shape=19, alpha=0.15) +
  xlab("logit(theta[1])") + 
  ylab("log(kappa)");
plot_funnel;